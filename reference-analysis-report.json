{
  "timestamp": "2025-09-18T05:49:45.127Z",
  "stats": {
    "filesAnalyzed": 27,
    "errorsFound": 87,
    "warningsFound": 0,
    "circularDependencies": 1
  },
  "errors": [
    {
      "file": "src\\application\\handlers\\StreamHandler.js",
      "message": "Import no resuelto: 'parse-magnet-uri' (línea 7)",
      "type": "error"
    },
    {
      "file": "src\\application\\handlers\\StreamHandler.js",
      "message": "Import 'safeExecute' no encontrado en '../../infrastructure/errors/ErrorHandler.js' (línea 11)",
      "type": "error"
    },
    {
      "file": "src\\application\\handlers\\StreamHandler.js",
      "message": "Método privado '#handleStreamRequest' no encontrado (línea 132)",
      "type": "error"
    },
    {
      "file": "src\\application\\handlers\\StreamHandler.js",
      "message": "Método privado '#validateStreamRequest' no encontrado (línea 184)",
      "type": "error"
    },
    {
      "file": "src\\application\\handlers\\StreamHandler.js",
      "message": "Método privado '#getMagnets' no encontrado (línea 210)",
      "type": "error"
    },
    {
      "file": "src\\config\\addonConfig.js",
      "message": "Import no resuelto: 'dotenv' (línea 6)",
      "type": "error"
    },
    {
      "file": "src\\config\\addonConfig.js",
      "message": "Import no resuelto: 'path' (línea 7)",
      "type": "error"
    },
    {
      "file": "src\\config\\addonConfig.js",
      "message": "Import no resuelto: 'url' (línea 8)",
      "type": "error"
    },
    {
      "file": "src\\domain\\entities\\Magnet.js",
      "message": "Import no resuelto: 'zod' (línea 1)",
      "type": "error"
    },
    {
      "file": "src\\index.js",
      "message": "Import no resuelto: 'stremio-addon-sdk' (línea 6)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\errors\\ErrorHandler.js",
      "message": "Método privado '#applyRecoveryStrategy' no encontrado (línea 141)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\errors\\ErrorHandler.js",
      "message": "Método privado '#retryWithBackoff' no encontrado (línea 226)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\factories\\MagnetRepositoryFactory.js",
      "message": "Método privado '#isUrl' no encontrado (línea 17)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\factories\\MagnetRepositoryFactory.js",
      "message": "Método privado '#isUrl' no encontrado (línea 47)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Import no resuelto: 'path' (línea 14)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#initializeRepository' no encontrado (línea 123)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#initializeRepository' no encontrado (línea 126)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#initializeRepository' no encontrado (línea 129)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#initializeRepository' no encontrado (línea 132)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#searchInRepository' no encontrado (línea 174)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#searchInRepository' no encontrado (línea 175)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#searchInRepository' no encontrado (línea 176)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#reinitializeSecondaryRepository' no encontrado (línea 223)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#searchInRepositoryByContentId' no encontrado (línea 304)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#searchInRepositoryByContentId' no encontrado (línea 305)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#searchInRepositoryByContentId' no encontrado (línea 310)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#reinitializeSecondaryRepository' no encontrado (línea 382)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#searchInRepositoryByContentId' no encontrado (línea 391)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#reinitializeRepository' no encontrado (línea 444)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#fallbackSearch' no encontrado (línea 474)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#searchInRepositoryByContentId' no encontrado (línea 953)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#searchInRepositoryByContentId' no encontrado (línea 954)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#searchInRepositoryByContentId' no encontrado (línea 959)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "message": "Método privado '#reinitializeSecondaryRepository' no encontrado (línea 997)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CSVMagnetRepository.js",
      "message": "Import no resuelto: 'fs' (línea 1)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CSVMagnetRepository.js",
      "message": "Import no resuelto: 'csv-parser' (línea 2)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\CSVMagnetRepository.js",
      "message": "Método privado '#loadFromCSV' no encontrado (línea 23)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\RemoteCSVMagnetRepository.js",
      "message": "Import no resuelto: 'csv-parser' (línea 1)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\RemoteCSVMagnetRepository.js",
      "message": "Import no resuelto: 'stream' (línea 4)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\RemoteCSVMagnetRepository.js",
      "message": "Método privado '#loadFromRemoteCSV' no encontrado (línea 29)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\repositories\\RemoteCSVMagnetRepository.js",
      "message": "Método privado '#fetchWithTimeout' no encontrado (línea 39)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\MetadataService.js",
      "message": "Import 'safeExecute' no encontrado en '../errors/ErrorHandler.js' (línea 8)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\MetadataService.js",
      "message": "Método privado '#fetchWithRetries' no encontrado (línea 93)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\MetadataService.js",
      "message": "Método privado '#getMovieMetadata' no encontrado (línea 293)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\MetadataService.js",
      "message": "Método privado '#getSeriesMetadata' no encontrado (línea 295)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\MetadataService.js",
      "message": "Método privado '#getAnimeMetadata' no encontrado (línea 297)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Import no resuelto: 'fs' (línea 6)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Import no resuelto: 'path' (línea 7)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#fetchWithTorService' no encontrado (línea 165)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#saveMagnetsToFile' no encontrado (línea 176)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#searchWithLanguageConfig' no encontrado (línea 248)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#saveMagnetsToFile' no encontrado (línea 260)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#searchWithLanguageConfig' no encontrado (línea 274)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#saveMagnetsToFile' no encontrado (línea 286)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#searchWithLanguageConfig' no encontrado (línea 297)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#saveMagnetsToFile' no encontrado (línea 317)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#saveMagnetsToFile' no encontrado (línea 322)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#searchWithLanguageConfig' no encontrado (línea 376)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#saveMagnetsToFile' no encontrado (línea 388)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#fetchWithTimeout' no encontrado (línea 1685)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#fetchWithTimeout' no encontrado (línea 1734)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorrentioApiService.js",
      "message": "Método privado '#fetchWithTimeout' no encontrado (línea 1742)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorService.js",
      "message": "Import no resuelto: 'net' (línea 6)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorService.js",
      "message": "Import no resuelto: 'socks-proxy-agent' (línea 7)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorService.js",
      "message": "Método privado '#delay' no encontrado (línea 150)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\TorService.js",
      "message": "Método privado '#delay' no encontrado (línea 169)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\UnifiedIdService.js",
      "message": "Método privado '#getCachedConversion' no encontrado (línea 69)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\UnifiedIdService.js",
      "message": "Método privado '#performConversion' no encontrado (línea 75)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\UnifiedIdService.js",
      "message": "Método privado '#cacheConversion' no encontrado (línea 85)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\UnifiedIdService.js",
      "message": "Método privado '#getCachedConversion' no encontrado (línea 98)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\services\\UnifiedIdService.js",
      "message": "Método privado '#getCachedConversion' no encontrado (línea 174)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\utils\\CsvFileInitializer.js",
      "message": "Import no resuelto: 'fs' (línea 7)",
      "type": "error"
    },
    {
      "file": "src\\infrastructure\\utils\\CsvFileInitializer.js",
      "message": "Import no resuelto: 'path' (línea 8)",
      "type": "error"
    },
    {
      "file": "fix-logger-calls.js",
      "message": "Import no resuelto: 'fs' (línea 7)",
      "type": "error"
    },
    {
      "file": "fix-logger-calls.js",
      "message": "Import no resuelto: 'path' (línea 8)",
      "type": "error"
    },
    {
      "file": "fix-logger-calls.js",
      "message": "Import no resuelto: 'url' (línea 9)",
      "type": "error"
    },
    {
      "file": "fix-logger-calls.js",
      "message": "Método privado '#logger' no encontrado (línea 110)",
      "type": "error"
    },
    {
      "file": "fix-logger-calls.js",
      "message": "Método privado '#logger' no encontrado (línea 115)",
      "type": "error"
    },
    {
      "file": "analyze-references.js",
      "message": "Import no resuelto: 'fs' (línea 7)",
      "type": "error"
    },
    {
      "file": "analyze-references.js",
      "message": "Import no resuelto: 'path' (línea 8)",
      "type": "error"
    },
    {
      "file": "analyze-references.js",
      "message": "Import no resuelto: 'url' (línea 9)",
      "type": "error"
    },
    {
      "file": "fix-references.js",
      "message": "Import no resuelto: 'fs' (línea 7)",
      "type": "error"
    },
    {
      "file": "fix-references.js",
      "message": "Import no resuelto: 'path' (línea 8)",
      "type": "error"
    },
    {
      "file": "fix-references.js",
      "message": "Import no resuelto: 'url' (línea 9)",
      "type": "error"
    },
    {
      "file": "reference-checker.js",
      "message": "Import no resuelto: 'url' (línea 9)",
      "type": "error"
    },
    {
      "file": "reference-checker.js",
      "message": "Import no resuelto: 'path' (línea 10)",
      "type": "error"
    },
    {
      "file": "Dependencia circular",
      "message": "Ciclo detectado: src\\infrastructure\\services\\CacheService.js → src\\infrastructure\\services\\CacheOptimizer.js → src\\infrastructure\\services\\CacheService.js",
      "type": "error"
    }
  ],
  "warnings": [],
  "files": [
    {
      "path": "src\\application\\handlers\\StreamHandler.js",
      "exports": [
        {
          "name": "StreamHandler",
          "type": "named",
          "line": 17
        },
        {
          "name": "StreamHandler",
          "type": "default",
          "line": 709
        }
      ],
      "imports": [
        {
          "modulePath": "../../domain/repositories/MagnetRepository.js",
          "type": "named",
          "items": [
            "MagnetNotFoundError"
          ],
          "line": 6
        },
        {
          "modulePath": "parse-magnet-uri",
          "type": "named",
          "items": [
            "parseMagnet"
          ],
          "line": 7
        },
        {
          "modulePath": "../../infrastructure/services/DynamicValidationService.js",
          "type": "named",
          "items": [
            "dynamicValidationService"
          ],
          "line": 8
        },
        {
          "modulePath": "../../infrastructure/services/CacheService.js",
          "type": "named",
          "items": [
            "cacheService"
          ],
          "line": 9
        },
        {
          "modulePath": "../../infrastructure/patterns/ConfigurationCommand.js",
          "type": "named",
          "items": [
            "ConfigurationCommandFactory"
          ],
          "line": 10
        },
        {
          "modulePath": "../../infrastructure/errors/ErrorHandler.js",
          "type": "named",
          "items": [
            "errorHandler",
            "withErrorHandling",
            "createError",
            "ERROR_TYPES",
            "safeExecute"
          ],
          "line": 11
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 33
        },
        {
          "name": "setPriorityLanguageTemporary",
          "type": "public",
          "line": 49
        },
        {
          "name": "if",
          "type": "public",
          "line": 50
        },
        {
          "name": "setPriorityLanguage",
          "type": "public",
          "line": 94
        },
        {
          "name": "if",
          "type": "public",
          "line": 95
        },
        {
          "name": "getPriorityLanguage",
          "type": "public",
          "line": 108
        },
        {
          "name": "if",
          "type": "public",
          "line": 109
        },
        {
          "name": "createAddonHandler",
          "type": "public",
          "line": 119
        },
        {
          "name": "if",
          "type": "public",
          "line": 136
        },
        {
          "name": "if",
          "type": "public",
          "line": 174
        },
        {
          "name": "if",
          "type": "public",
          "line": 186
        },
        {
          "name": "if",
          "type": "public",
          "line": 205
        },
        {
          "name": "if",
          "type": "public",
          "line": 210
        },
        {
          "name": "if",
          "type": "public",
          "line": 268
        },
        {
          "name": "if",
          "type": "public",
          "line": 284
        },
        {
          "name": "if",
          "type": "public",
          "line": 313
        },
        {
          "name": "if",
          "type": "public",
          "line": 325
        },
        {
          "name": "if",
          "type": "public",
          "line": 376
        },
        {
          "name": "if",
          "type": "public",
          "line": 378
        },
        {
          "name": "if",
          "type": "public",
          "line": 390
        },
        {
          "name": "if",
          "type": "public",
          "line": 417
        },
        {
          "name": "if",
          "type": "public",
          "line": 509
        },
        {
          "name": "if",
          "type": "public",
          "line": 513
        },
        {
          "name": "if",
          "type": "public",
          "line": 517
        },
        {
          "name": "if",
          "type": "public",
          "line": 550
        },
        {
          "name": "if",
          "type": "public",
          "line": 556
        },
        {
          "name": "switch",
          "type": "public",
          "line": 691
        },
        {
          "name": "#isSupportedType",
          "type": "private",
          "line": 353
        },
        {
          "name": "#createStreamsFromMagnets",
          "type": "private",
          "line": 411
        },
        {
          "name": "#formatStreamTitle",
          "type": "private",
          "line": 450
        },
        {
          "name": "#formatStreamDescription",
          "type": "private",
          "line": 496
        },
        {
          "name": "#createStreamResponse",
          "type": "private",
          "line": 570
        },
        {
          "name": "#createEmptyResponse",
          "type": "private",
          "line": 585
        },
        {
          "name": "#createErrorResponse",
          "type": "private",
          "line": 598
        },
        {
          "name": "#detectAnimeIdType",
          "type": "private",
          "line": 628
        },
        {
          "name": "#getStreamCacheTTL",
          "type": "private",
          "line": 671
        },
        {
          "name": "#logMessage",
          "type": "private",
          "line": 688
        }
      ],
      "classes": [
        {
          "name": "StreamHandler",
          "line": 17
        }
      ],
      "functions": []
    },
    {
      "path": "src\\config\\addonConfig.js",
      "exports": [
        {
          "name": "addonConfig",
          "type": "named",
          "line": 298
        },
        {
          "name": "manifest",
          "type": "named",
          "line": 299
        }
      ],
      "imports": [
        {
          "modulePath": "dotenv",
          "type": "default",
          "items": [
            "dotenv"
          ],
          "line": 6
        },
        {
          "modulePath": "path",
          "type": "named",
          "items": [
            "join",
            "dirname"
          ],
          "line": 7
        },
        {
          "modulePath": "url",
          "type": "named",
          "items": [
            "fileURLToPath"
          ],
          "line": 8
        },
        {
          "modulePath": "./constants.js",
          "type": "named",
          "items": [
            "CONSTANTS"
          ],
          "line": 9
        }
      ],
      "methods": [
        {
          "name": "if",
          "type": "public",
          "line": 22
        }
      ],
      "classes": [],
      "functions": [
        {
          "name": "resolvePath",
          "line": 22
        },
        {
          "name": "generateManifest",
          "line": 264
        }
      ]
    },
    {
      "path": "src\\config\\constants.js",
      "exports": [
        {
          "name": "TIME_CONSTANTS",
          "type": "named",
          "line": 9
        },
        {
          "name": "NETWORK_CONSTANTS",
          "type": "named",
          "line": 27
        },
        {
          "name": "FILE_CONSTANTS",
          "type": "named",
          "line": 55
        },
        {
          "name": "QUALITY_CONSTANTS",
          "type": "named",
          "line": 67
        },
        {
          "name": "PROVIDER_CONSTANTS",
          "type": "named",
          "line": 90
        },
        {
          "name": "LIMIT_CONSTANTS",
          "type": "named",
          "line": 113
        },
        {
          "name": "LANGUAGE_CONSTANTS",
          "type": "named",
          "line": 135
        },
        {
          "name": "CACHE_CONSTANTS",
          "type": "named",
          "line": 148
        },
        {
          "name": "LOGGING_CONSTANTS",
          "type": "named",
          "line": 170
        },
        {
          "name": "CASCADE_CONSTANTS",
          "type": "named",
          "line": 187
        },
        {
          "name": "METADATA_CONSTANTS",
          "type": "named",
          "line": 204
        },
        {
          "name": "REGEX_PATTERNS",
          "type": "named",
          "line": 230
        },
        {
          "name": "CONVERSION_CONSTANTS",
          "type": "named",
          "line": 253
        },
        {
          "name": "URL_CONSTANTS",
          "type": "named",
          "line": 280
        },
        {
          "name": "CONSTANTS",
          "type": "named",
          "line": 292
        },
        {
          "name": "CONSTANTS",
          "type": "default",
          "line": 309
        }
      ],
      "imports": [],
      "methods": [],
      "classes": [],
      "functions": []
    },
    {
      "path": "src\\domain\\entities\\Magnet.js",
      "exports": [
        {
          "name": "Magnet",
          "type": "named",
          "line": 19
        }
      ],
      "imports": [
        {
          "modulePath": "zod",
          "type": "named",
          "items": [
            "z"
          ],
          "line": 1
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 19
        }
      ],
      "classes": [
        {
          "name": "Magnet",
          "line": 19
        }
      ],
      "functions": []
    },
    {
      "path": "src\\domain\\repositories\\MagnetRepository.js",
      "exports": [
        {
          "name": "MagnetRepository",
          "type": "named",
          "line": 7
        },
        {
          "name": "RepositoryError",
          "type": "named",
          "line": 50
        },
        {
          "name": "MagnetNotFoundError",
          "type": "named",
          "line": 58
        }
      ],
      "imports": [],
      "methods": [
        {
          "name": "setPriorityLanguage",
          "type": "public",
          "line": 35
        },
        {
          "name": "getPriorityLanguage",
          "type": "public",
          "line": 43
        },
        {
          "name": "constructor",
          "type": "public",
          "line": 50
        },
        {
          "name": "constructor",
          "type": "public",
          "line": 58
        }
      ],
      "classes": [
        {
          "name": "MagnetRepository",
          "line": 7
        },
        {
          "name": "RepositoryError",
          "line": 50
        },
        {
          "name": "MagnetNotFoundError",
          "line": 58
        }
      ],
      "functions": []
    },
    {
      "path": "src\\index.js",
      "exports": [
        {
          "name": "MagnetAddon",
          "original": "MagnetAddon",
          "type": "named",
          "line": 194
        }
      ],
      "imports": [
        {
          "modulePath": "stremio-addon-sdk",
          "type": "named",
          "items": [
            "addonBuilder",
            "serveHTTP"
          ],
          "line": 6
        },
        {
          "modulePath": "./config/addonConfig.js",
          "type": "named",
          "items": [
            "addonConfig",
            "manifest"
          ],
          "line": 7
        },
        {
          "modulePath": "./infrastructure/repositories/CascadingMagnetRepository.js",
          "type": "named",
          "items": [
            "CascadingMagnetRepository"
          ],
          "line": 8
        },
        {
          "modulePath": "./application/handlers/StreamHandler.js",
          "type": "named",
          "items": [
            "StreamHandler"
          ],
          "line": 9
        },
        {
          "modulePath": "./infrastructure/utils/EnhancedLogger.js",
          "type": "named",
          "items": [
            "EnhancedLogger"
          ],
          "line": 10
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 20
        },
        {
          "name": "#setupLanguageRoutes",
          "type": "private",
          "line": 111
        },
        {
          "name": "#setupDiagnosticRoutes",
          "type": "private",
          "line": 120
        },
        {
          "name": "#createLogger",
          "type": "private",
          "line": 148
        }
      ],
      "classes": [
        {
          "name": "MagnetAddon",
          "line": 15
        }
      ],
      "functions": [
        {
          "name": "main",
          "line": 164
        }
      ]
    },
    {
      "path": "src\\infrastructure\\errors\\ErrorHandler.js",
      "exports": [
        {
          "name": "ERROR_TYPES",
          "type": "named",
          "line": 11
        },
        {
          "name": "RECOVERY_STRATEGIES",
          "type": "named",
          "line": 26
        },
        {
          "name": "EnhancedError",
          "type": "named",
          "line": 37
        },
        {
          "name": "ErrorHandler",
          "type": "named",
          "line": 111
        },
        {
          "name": "errorHandler",
          "type": "named",
          "line": 409
        },
        {
          "name": "withErrorHandling",
          "type": "named",
          "line": 416
        },
        {
          "name": "createError",
          "type": "named",
          "line": 448
        }
      ],
      "imports": [
        {
          "modulePath": "../utils/EnhancedLogger.js",
          "type": "named",
          "items": [
            "EnhancedLogger"
          ],
          "line": 6
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 37
        },
        {
          "name": "toJSON",
          "type": "public",
          "line": 88
        },
        {
          "name": "constructor",
          "type": "public",
          "line": 114
        },
        {
          "name": "if",
          "type": "public",
          "line": 148
        },
        {
          "name": "switch",
          "type": "public",
          "line": 221
        },
        {
          "name": "for",
          "type": "public",
          "line": 248
        },
        {
          "name": "if",
          "type": "public",
          "line": 259
        },
        {
          "name": "if",
          "type": "public",
          "line": 341
        },
        {
          "name": "if",
          "type": "public",
          "line": 361
        },
        {
          "name": "getStats",
          "type": "public",
          "line": 381
        },
        {
          "name": "resetCircuitBreaker",
          "type": "public",
          "line": 393
        },
        {
          "name": "resetAllCircuitBreakers",
          "type": "public",
          "line": 401
        },
        {
          "name": "#determineRecoverability",
          "type": "private",
          "line": 57
        },
        {
          "name": "#determineStrategy",
          "type": "private",
          "line": 71
        },
        {
          "name": "#enhanceError",
          "type": "private",
          "line": 147
        },
        {
          "name": "#classifyError",
          "type": "private",
          "line": 165
        },
        {
          "name": "#shouldRetry",
          "type": "private",
          "line": 294
        },
        {
          "name": "#applyFallbackStrategy",
          "type": "private",
          "line": 307
        },
        {
          "name": "#logError",
          "type": "private",
          "line": 353
        },
        {
          "name": "#sleep",
          "type": "private",
          "line": 373
        }
      ],
      "classes": [
        {
          "name": "EnhancedError",
          "line": 37
        },
        {
          "name": "ErrorHandler",
          "line": 111
        }
      ],
      "functions": [
        {
          "name": "withErrorHandling",
          "line": 416
        },
        {
          "name": "createError",
          "line": 448
        },
        {
          "name": "safeExecute",
          "line": 458
        }
      ]
    },
    {
      "path": "src\\infrastructure\\factories\\MagnetRepositoryFactory.js",
      "exports": [
        {
          "name": "MagnetRepositoryFactory",
          "type": "named",
          "line": 8
        }
      ],
      "imports": [
        {
          "modulePath": "../repositories/CSVMagnetRepository.js",
          "type": "named",
          "items": [
            "CSVMagnetRepository"
          ],
          "line": 1
        },
        {
          "modulePath": "../repositories/RemoteCSVMagnetRepository.js",
          "type": "named",
          "items": [
            "RemoteCSVMagnetRepository"
          ],
          "line": 2
        }
      ],
      "methods": [],
      "classes": [
        {
          "name": "MagnetRepositoryFactory",
          "line": 8
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\patterns\\ConfigurationCommand.js",
      "exports": [
        {
          "name": "ConfigurationMemento",
          "type": "named",
          "line": 12
        },
        {
          "name": "ConfigurationCommand",
          "type": "named",
          "line": 34
        },
        {
          "name": "LanguageConfigurationCommand",
          "type": "named",
          "line": 83
        },
        {
          "name": "ConfigurationInvoker",
          "type": "named",
          "line": 132
        },
        {
          "name": "ConfigurationCommandFactory",
          "type": "named",
          "line": 196
        }
      ],
      "imports": [
        {
          "modulePath": "../../config/constants.js",
          "type": "named",
          "items": [
            "CONSTANTS"
          ],
          "line": 7
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 12
        },
        {
          "name": "getState",
          "type": "public",
          "line": 16
        },
        {
          "name": "getTimestamp",
          "type": "public",
          "line": 20
        },
        {
          "name": "isExpired",
          "type": "public",
          "line": 24
        },
        {
          "name": "constructor",
          "type": "public",
          "line": 34
        },
        {
          "name": "execute",
          "type": "public",
          "line": 40
        },
        {
          "name": "undo",
          "type": "public",
          "line": 44
        },
        {
          "name": "if",
          "type": "public",
          "line": 46
        },
        {
          "name": "_saveState",
          "type": "public",
          "line": 61
        },
        {
          "name": "_restoreState",
          "type": "public",
          "line": 65
        },
        {
          "name": "isExecuted",
          "type": "public",
          "line": 69
        },
        {
          "name": "getMemento",
          "type": "public",
          "line": 73
        },
        {
          "name": "constructor",
          "type": "public",
          "line": 83
        },
        {
          "name": "execute",
          "type": "public",
          "line": 88
        },
        {
          "name": "if",
          "type": "public",
          "line": 90
        },
        {
          "name": "_restoreState",
          "type": "public",
          "line": 117
        },
        {
          "name": "constructor",
          "type": "public",
          "line": 132
        },
        {
          "name": "executeCommand",
          "type": "public",
          "line": 137
        },
        {
          "name": "if",
          "type": "public",
          "line": 144
        },
        {
          "name": "undoLastCommand",
          "type": "public",
          "line": 151
        },
        {
          "name": "if",
          "type": "public",
          "line": 153
        },
        {
          "name": "if",
          "type": "public",
          "line": 160
        },
        {
          "name": "undoAllCommands",
          "type": "public",
          "line": 165
        },
        {
          "name": "while",
          "type": "public",
          "line": 168
        },
        {
          "name": "getCommandCount",
          "type": "public",
          "line": 175
        },
        {
          "name": "clearStack",
          "type": "public",
          "line": 179
        },
        {
          "name": "_trimStack",
          "type": "public",
          "line": 184
        },
        {
          "name": "while",
          "type": "public",
          "line": 186
        }
      ],
      "classes": [
        {
          "name": "ConfigurationMemento",
          "line": 12
        },
        {
          "name": "ConfigurationCommand",
          "line": 34
        },
        {
          "name": "LanguageConfigurationCommand",
          "line": 83
        },
        {
          "name": "ConfigurationInvoker",
          "line": 132
        },
        {
          "name": "ConfigurationCommandFactory",
          "line": 196
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\repositories\\CascadingMagnetRepository.js",
      "exports": [
        {
          "name": "CascadingMagnetRepository",
          "type": "named",
          "line": 20
        },
        {
          "name": "CascadingMagnetRepository",
          "type": "default",
          "line": 1041
        }
      ],
      "imports": [
        {
          "modulePath": "../../domain/repositories/MagnetRepository.js",
          "type": "named",
          "items": [
            "MagnetRepository",
            "MagnetNotFoundError",
            "RepositoryError"
          ],
          "line": 6
        },
        {
          "modulePath": "./CSVMagnetRepository.js",
          "type": "named",
          "items": [
            "CSVMagnetRepository"
          ],
          "line": 7
        },
        {
          "modulePath": "../services/TorrentioApiService.js",
          "type": "named",
          "items": [
            "TorrentioApiService"
          ],
          "line": 8
        },
        {
          "modulePath": "../services/UnifiedIdService.js",
          "type": "named",
          "items": [
            "unifiedIdService"
          ],
          "line": 9
        },
        {
          "modulePath": "../services/MetadataService.js",
          "type": "named",
          "items": [
            "metadataService"
          ],
          "line": 10
        },
        {
          "modulePath": "../services/CacheService.js",
          "type": "named",
          "items": [
            "cacheService"
          ],
          "line": 11
        },
        {
          "modulePath": "../patterns/ConfigurationCommand.js",
          "type": "named",
          "items": [
            "ConfigurationCommandFactory"
          ],
          "line": 12
        },
        {
          "modulePath": "../utils/CsvFileInitializer.js",
          "type": "named",
          "items": [
            "CsvFileInitializer"
          ],
          "line": 13
        },
        {
          "modulePath": "path",
          "type": "named",
          "items": [
            "dirname"
          ],
          "line": 14
        }
      ],
      "methods": [
        {
          "name": "if",
          "type": "public",
          "line": 41
        },
        {
          "name": "constructor",
          "type": "public",
          "line": 71
        },
        {
          "name": "if",
          "type": "public",
          "line": 165
        },
        {
          "name": "if",
          "type": "public",
          "line": 182
        },
        {
          "name": "if",
          "type": "public",
          "line": 208
        },
        {
          "name": "if",
          "type": "public",
          "line": 217
        },
        {
          "name": "if",
          "type": "public",
          "line": 252
        },
        {
          "name": "if",
          "type": "public",
          "line": 266
        },
        {
          "name": "if",
          "type": "public",
          "line": 273
        },
        {
          "name": "if",
          "type": "public",
          "line": 284
        },
        {
          "name": "if",
          "type": "public",
          "line": 323
        },
        {
          "name": "if",
          "type": "public",
          "line": 340
        },
        {
          "name": "if",
          "type": "public",
          "line": 361
        },
        {
          "name": "if",
          "type": "public",
          "line": 391
        },
        {
          "name": "if",
          "type": "public",
          "line": 400
        },
        {
          "name": "if",
          "type": "public",
          "line": 423
        },
        {
          "name": "if",
          "type": "public",
          "line": 468
        },
        {
          "name": "if",
          "type": "public",
          "line": 489
        },
        {
          "name": "if",
          "type": "public",
          "line": 510
        },
        {
          "name": "setPriorityLanguageTemporary",
          "type": "public",
          "line": 563
        },
        {
          "name": "setPriorityLanguage",
          "type": "public",
          "line": 602
        },
        {
          "name": "getPriorityLanguage",
          "type": "public",
          "line": 610
        },
        {
          "name": "if",
          "type": "public",
          "line": 697
        },
        {
          "name": "for",
          "type": "public",
          "line": 910
        },
        {
          "name": "for",
          "type": "public",
          "line": 914
        },
        {
          "name": "for",
          "type": "public",
          "line": 918
        },
        {
          "name": "for",
          "type": "public",
          "line": 920
        },
        {
          "name": "if",
          "type": "public",
          "line": 972
        },
        {
          "name": "if",
          "type": "public",
          "line": 984
        },
        {
          "name": "if",
          "type": "public",
          "line": 993
        },
        {
          "name": "#logMessage",
          "type": "private",
          "line": 40
        },
        {
          "name": "#getProvidersForLanguage",
          "type": "private",
          "line": 621
        },
        {
          "name": "#detectIdType",
          "type": "private",
          "line": 647
        },
        {
          "name": "#prioritizeResults",
          "type": "private",
          "line": 691
        },
        {
          "name": "#enrichMagnetsWithMetadata",
          "type": "private",
          "line": 821
        },
        {
          "name": "#calculateQualityScore",
          "type": "private",
          "line": 847
        },
        {
          "name": "#calculateTitleSimilarity",
          "type": "private",
          "line": 883
        },
        {
          "name": "#levenshteinDistance",
          "type": "private",
          "line": 908
        },
        {
          "name": "#getCacheTTL",
          "type": "private",
          "line": 1026
        }
      ],
      "classes": [
        {
          "name": "CascadingMagnetRepository",
          "line": 20
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\repositories\\CSVMagnetRepository.js",
      "exports": [
        {
          "name": "CSVMagnetRepository",
          "type": "named",
          "line": 6
        }
      ],
      "imports": [
        {
          "modulePath": "fs",
          "type": "named",
          "items": [
            "createReadStream"
          ],
          "line": 1
        },
        {
          "modulePath": "csv-parser",
          "type": "default",
          "items": [
            "csv"
          ],
          "line": 2
        },
        {
          "modulePath": "../../domain/repositories/MagnetRepository.js",
          "type": "named",
          "items": [
            "MagnetRepository",
            "RepositoryError",
            "MagnetNotFoundError"
          ],
          "line": 3
        },
        {
          "modulePath": "../../domain/entities/Magnet.js",
          "type": "named",
          "items": [
            "Magnet"
          ],
          "line": 4
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 11
        },
        {
          "name": "if",
          "type": "public",
          "line": 57
        },
        {
          "name": "if",
          "type": "public",
          "line": 97
        },
        {
          "name": "#addToMap",
          "type": "private",
          "line": 70
        }
      ],
      "classes": [
        {
          "name": "CSVMagnetRepository",
          "line": 6
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\repositories\\RemoteCSVMagnetRepository.js",
      "exports": [
        {
          "name": "RemoteCSVMagnetRepository",
          "type": "named",
          "line": 10
        }
      ],
      "imports": [
        {
          "modulePath": "csv-parser",
          "type": "default",
          "items": [
            "csv"
          ],
          "line": 1
        },
        {
          "modulePath": "../../domain/repositories/MagnetRepository.js",
          "type": "named",
          "items": [
            "MagnetRepository",
            "RepositoryError",
            "MagnetNotFoundError"
          ],
          "line": 2
        },
        {
          "modulePath": "../../domain/entities/Magnet.js",
          "type": "named",
          "items": [
            "Magnet"
          ],
          "line": 3
        },
        {
          "modulePath": "stream",
          "type": "named",
          "items": [
            "Readable"
          ],
          "line": 4
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 16
        },
        {
          "name": "if",
          "type": "public",
          "line": 39
        },
        {
          "name": "if",
          "type": "public",
          "line": 103
        },
        {
          "name": "if",
          "type": "public",
          "line": 120
        },
        {
          "name": "#addToMap",
          "type": "private",
          "line": 71
        }
      ],
      "classes": [
        {
          "name": "RemoteCSVMagnetRepository",
          "line": 10
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\services\\CacheOptimizer.js",
      "exports": [
        {
          "name": "CacheOptimizer",
          "type": "named",
          "line": 9
        },
        {
          "name": "cacheOptimizer",
          "original": "cacheOptimizer",
          "type": "named",
          "line": 566
        }
      ],
      "imports": [
        {
          "modulePath": "../utils/EnhancedLogger.js",
          "type": "named",
          "items": [
            "EnhancedLogger"
          ],
          "line": 6
        },
        {
          "modulePath": "./CacheService.js",
          "type": "named",
          "items": [
            "cacheService"
          ],
          "line": 7
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 9
        },
        {
          "name": "calculateAdaptiveTTL",
          "type": "public",
          "line": 38
        },
        {
          "name": "if",
          "type": "public",
          "line": 41
        },
        {
          "name": "shouldEvict",
          "type": "public",
          "line": 71
        },
        {
          "name": "if",
          "type": "public",
          "line": 72
        },
        {
          "name": "recordAccess",
          "type": "public",
          "line": 101
        },
        {
          "name": "getOptimizationMetrics",
          "type": "public",
          "line": 141
        },
        {
          "name": "for",
          "type": "public",
          "line": 152
        },
        {
          "name": "reset",
          "type": "public",
          "line": 169
        },
        {
          "name": "if",
          "type": "public",
          "line": 527
        },
        {
          "name": "#getBaseTTL",
          "type": "private",
          "line": 182
        },
        {
          "name": "#getPatternMultiplier",
          "type": "private",
          "line": 211
        },
        {
          "name": "#getPerformanceMultiplier",
          "type": "private",
          "line": 232
        },
        {
          "name": "#getAccessFrequencyMultiplier",
          "type": "private",
          "line": 251
        },
        {
          "name": "#analyzeAccessPattern",
          "type": "private",
          "line": 270
        },
        {
          "name": "#predictFutureAccess",
          "type": "private",
          "line": 286
        },
        {
          "name": "#calculateEvictionScore",
          "type": "private",
          "line": 299
        },
        {
          "name": "#defaultEvictionStrategy",
          "type": "private",
          "line": 311
        },
        {
          "name": "#updatePatterns",
          "type": "private",
          "line": 321
        },
        {
          "name": "#detectTemporalPattern",
          "type": "private",
          "line": 350
        },
        {
          "name": "#calculateAccessFrequency",
          "type": "private",
          "line": 372
        },
        {
          "name": "#calculatePopularityScore",
          "type": "private",
          "line": 383
        },
        {
          "name": "#calculateTrend",
          "type": "private",
          "line": 397
        },
        {
          "name": "#calculateDistribution",
          "type": "private",
          "line": 415
        },
        {
          "name": "#findPeaks",
          "type": "private",
          "line": 427
        },
        {
          "name": "#calculateSeasonality",
          "type": "private",
          "line": 442
        },
        {
          "name": "#calculateRecencyScore",
          "type": "private",
          "line": 462
        },
        {
          "name": "#calculateConfidence",
          "type": "private",
          "line": 481
        },
        {
          "name": "#calculateVariance",
          "type": "private",
          "line": 492
        },
        {
          "name": "#getWeekOfYear",
          "type": "private",
          "line": 501
        },
        {
          "name": "#getDefaultTTL",
          "type": "private",
          "line": 512
        },
        {
          "name": "#initializeOptimizationEngine",
          "type": "private",
          "line": 526
        },
        {
          "name": "#adaptOptimizationRules",
          "type": "private",
          "line": 540
        }
      ],
      "classes": [
        {
          "name": "CacheOptimizer",
          "line": 9
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\services\\CacheService.js",
      "exports": [
        {
          "name": "CacheService",
          "type": "named",
          "line": 11
        },
        {
          "name": "cacheService",
          "original": "cacheService",
          "type": "named",
          "line": 340
        }
      ],
      "imports": [
        {
          "modulePath": "../utils/EnhancedLogger.js",
          "type": "named",
          "items": [
            "EnhancedLogger"
          ],
          "line": 6
        },
        {
          "modulePath": "../../config/addonConfig.js",
          "type": "named",
          "items": [
            "addonConfig"
          ],
          "line": 7
        },
        {
          "modulePath": "../../config/constants.js",
          "type": "named",
          "items": [
            "CONSTANTS"
          ],
          "line": 8
        },
        {
          "modulePath": "./CacheOptimizer.js",
          "type": "named",
          "items": [
            "cacheOptimizer"
          ],
          "line": 9
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 11
        },
        {
          "name": "get",
          "type": "public",
          "line": 32
        },
        {
          "name": "if",
          "type": "public",
          "line": 34
        },
        {
          "name": "set",
          "type": "public",
          "line": 68
        },
        {
          "name": "delete",
          "type": "public",
          "line": 102
        },
        {
          "name": "if",
          "type": "public",
          "line": 104
        },
        {
          "name": "clear",
          "type": "public",
          "line": 114
        },
        {
          "name": "has",
          "type": "public",
          "line": 126
        },
        {
          "name": "getStats",
          "type": "public",
          "line": 142
        },
        {
          "name": "cleanup",
          "type": "public",
          "line": 160
        },
        {
          "name": "if",
          "type": "public",
          "line": 165
        },
        {
          "name": "if",
          "type": "public",
          "line": 170
        },
        {
          "name": "generateMagnetCacheKey",
          "type": "public",
          "line": 187
        },
        {
          "name": "generateMetadataCacheKey",
          "type": "public",
          "line": 209
        },
        {
          "name": "invalidatePattern",
          "type": "public",
          "line": 218
        },
        {
          "name": "if",
          "type": "public",
          "line": 228
        },
        {
          "name": "if",
          "type": "public",
          "line": 256
        },
        {
          "name": "if",
          "type": "public",
          "line": 261
        },
        {
          "name": "if",
          "type": "public",
          "line": 291
        },
        {
          "name": "generateStreamCacheKey",
          "type": "public",
          "line": 312
        },
        {
          "name": "calculateAdaptiveTTL",
          "type": "public",
          "line": 329
        },
        {
          "name": "#incrementStat",
          "type": "private",
          "line": 241
        },
        {
          "name": "#evictLeastRecentlyUsed",
          "type": "private",
          "line": 251
        },
        {
          "name": "#calculateMemoryUsage",
          "type": "private",
          "line": 273
        },
        {
          "name": "#startCleanupTimer",
          "type": "private",
          "line": 290
        }
      ],
      "classes": [
        {
          "name": "CacheService",
          "line": 11
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\services\\DynamicValidationService.js",
      "exports": [
        {
          "name": "DynamicValidationService",
          "type": "named",
          "line": 12
        },
        {
          "name": "dynamicValidationService",
          "type": "named",
          "line": 758
        }
      ],
      "imports": [
        {
          "modulePath": "./IdDetectorService.js",
          "type": "named",
          "items": [
            "idDetectorService"
          ],
          "line": 7
        },
        {
          "modulePath": "./UnifiedIdService.js",
          "type": "named",
          "items": [
            "unifiedIdService"
          ],
          "line": 8
        },
        {
          "modulePath": "../utils/EnhancedLogger.js",
          "type": "named",
          "items": [
            "EnhancedLogger"
          ],
          "line": 9
        },
        {
          "modulePath": "../../config/constants.js",
          "type": "named",
          "items": [
            "CONSTANTS"
          ],
          "line": 10
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 12
        },
        {
          "name": "validateId",
          "type": "public",
          "line": 144
        },
        {
          "name": "if",
          "type": "public",
          "line": 145
        },
        {
          "name": "if",
          "type": "public",
          "line": 154
        },
        {
          "name": "if",
          "type": "public",
          "line": 166
        },
        {
          "name": "if",
          "type": "public",
          "line": 177
        },
        {
          "name": "if",
          "type": "public",
          "line": 203
        },
        {
          "name": "if",
          "type": "public",
          "line": 211
        },
        {
          "name": "if",
          "type": "public",
          "line": 229
        },
        {
          "name": "if",
          "type": "public",
          "line": 272
        },
        {
          "name": "if",
          "type": "public",
          "line": 279
        },
        {
          "name": "if",
          "type": "public",
          "line": 286
        },
        {
          "name": "if",
          "type": "public",
          "line": 293
        },
        {
          "name": "if",
          "type": "public",
          "line": 302
        },
        {
          "name": "if",
          "type": "public",
          "line": 335
        },
        {
          "name": "if",
          "type": "public",
          "line": 343
        },
        {
          "name": "if",
          "type": "public",
          "line": 362
        },
        {
          "name": "if",
          "type": "public",
          "line": 371
        },
        {
          "name": "if",
          "type": "public",
          "line": 419
        },
        {
          "name": "if",
          "type": "public",
          "line": 453
        },
        {
          "name": "if",
          "type": "public",
          "line": 495
        },
        {
          "name": "if",
          "type": "public",
          "line": 511
        },
        {
          "name": "if",
          "type": "public",
          "line": 544
        },
        {
          "name": "if",
          "type": "public",
          "line": 573
        },
        {
          "name": "if",
          "type": "public",
          "line": 667
        },
        {
          "name": "if",
          "type": "public",
          "line": 716
        },
        {
          "name": "if",
          "type": "public",
          "line": 724
        },
        {
          "name": "#initializeValidationRules",
          "type": "private",
          "line": 27
        },
        {
          "name": "#initializeValidationContexts",
          "type": "private",
          "line": 113
        },
        {
          "name": "#validateAgainstRules",
          "type": "private",
          "line": 202
        },
        {
          "name": "#generateRecommendations",
          "type": "private",
          "line": 713
        },
        {
          "name": "#createValidationResult",
          "type": "private",
          "line": 743
        }
      ],
      "classes": [
        {
          "name": "DynamicValidationService",
          "line": 12
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\services\\IdDetectorService.js",
      "exports": [
        {
          "name": "IdDetectorService",
          "type": "named",
          "line": 6
        },
        {
          "name": "idDetectorService",
          "type": "named",
          "line": 350
        }
      ],
      "imports": [],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 7
        },
        {
          "name": "detectIdType",
          "type": "public",
          "line": 65
        },
        {
          "name": "if",
          "type": "public",
          "line": 66
        },
        {
          "name": "for",
          "type": "public",
          "line": 81
        },
        {
          "name": "if",
          "type": "public",
          "line": 105
        },
        {
          "name": "if",
          "type": "public",
          "line": 213
        },
        {
          "name": "getSupportedTypes",
          "type": "public",
          "line": 334
        },
        {
          "name": "for",
          "type": "public",
          "line": 336
        },
        {
          "name": "#initializePatterns",
          "type": "private",
          "line": 11
        },
        {
          "name": "#extractCleanId",
          "type": "private",
          "line": 98
        },
        {
          "name": "#validateImdbFormat",
          "type": "private",
          "line": 119
        },
        {
          "name": "#validateImdbSeriesFormat",
          "type": "private",
          "line": 128
        },
        {
          "name": "#validateKitsuFormat",
          "type": "private",
          "line": 144
        },
        {
          "name": "#validateKitsuSeriesFormat",
          "type": "private",
          "line": 156
        },
        {
          "name": "#validatePositiveInteger",
          "type": "private",
          "line": 170
        },
        {
          "name": "#validateNumericFormat",
          "type": "private",
          "line": 181
        },
        {
          "name": "#validateNumericId",
          "type": "private",
          "line": 191
        },
        {
          "name": "#validateAnimeSeriesFormat",
          "type": "private",
          "line": 204
        },
        {
          "name": "#createDetectionResult",
          "type": "private",
          "line": 246
        },
        {
          "name": "#initializeUrlPatterns",
          "type": "private",
          "line": 262
        },
        {
          "name": "#extractId",
          "type": "private",
          "line": 278
        },
        {
          "name": "#extractImdbId",
          "type": "private",
          "line": 288
        },
        {
          "name": "#extractKitsuId",
          "type": "private",
          "line": 297
        },
        {
          "name": "#extractMalId",
          "type": "private",
          "line": 306
        },
        {
          "name": "#extractAnilistId",
          "type": "private",
          "line": 315
        },
        {
          "name": "#extractAnidbId",
          "type": "private",
          "line": 324
        }
      ],
      "classes": [
        {
          "name": "IdDetectorService",
          "line": 6
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\services\\MetadataService.js",
      "exports": [
        {
          "name": "MetadataService",
          "type": "named",
          "line": 12
        },
        {
          "name": "metadataService",
          "type": "named",
          "line": 512
        }
      ],
      "imports": [
        {
          "modulePath": "../utils/EnhancedLogger.js",
          "type": "named",
          "items": [
            "EnhancedLogger"
          ],
          "line": 7
        },
        {
          "modulePath": "../errors/ErrorHandler.js",
          "type": "named",
          "items": [
            "errorHandler",
            "withErrorHandling",
            "createError",
            "ERROR_TYPES",
            "safeExecute"
          ],
          "line": 8
        },
        {
          "modulePath": "./CacheService.js",
          "type": "named",
          "items": [
            "cacheService"
          ],
          "line": 9
        },
        {
          "modulePath": "../../config/addonConfig.js",
          "type": "named",
          "items": [
            "addonConfig"
          ],
          "line": 10
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 20
        },
        {
          "name": "if",
          "type": "public",
          "line": 68
        },
        {
          "name": "if",
          "type": "public",
          "line": 77
        },
        {
          "name": "if",
          "type": "public",
          "line": 163
        },
        {
          "name": "if",
          "type": "public",
          "line": 254
        },
        {
          "name": "if",
          "type": "public",
          "line": 261
        },
        {
          "name": "for",
          "type": "public",
          "line": 285
        },
        {
          "name": "switch",
          "type": "public",
          "line": 289
        },
        {
          "name": "if",
          "type": "public",
          "line": 307
        },
        {
          "name": "if",
          "type": "public",
          "line": 331
        },
        {
          "name": "clearExpiredCache",
          "type": "public",
          "line": 387
        },
        {
          "name": "if",
          "type": "public",
          "line": 392
        },
        {
          "name": "if",
          "type": "public",
          "line": 397
        },
        {
          "name": "invalidateMetadata",
          "type": "public",
          "line": 436
        },
        {
          "name": "if",
          "type": "public",
          "line": 447
        },
        {
          "name": "getCacheStats",
          "type": "public",
          "line": 488
        },
        {
          "name": "#initializeMetadataConfig",
          "type": "private",
          "line": 41
        },
        {
          "name": "#validateMetadata",
          "type": "private",
          "line": 252
        },
        {
          "name": "#getCachedMetadata",
          "type": "private",
          "line": 329
        },
        {
          "name": "#setCachedMetadata",
          "type": "private",
          "line": 352
        },
        {
          "name": "#getDefaultMetadata",
          "type": "private",
          "line": 372
        },
        {
          "name": "#getMetadataCacheTTL",
          "type": "private",
          "line": 409
        }
      ],
      "classes": [
        {
          "name": "MetadataService",
          "line": 12
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\services\\TorrentioApiService.js",
      "exports": [
        {
          "name": "TorrentioApiService",
          "type": "named",
          "line": 44
        },
        {
          "name": "TorrentioApiService",
          "type": "default",
          "line": 1780
        }
      ],
      "imports": [
        {
          "modulePath": "fs",
          "type": "named",
          "items": [
            "writeFileSync",
            "appendFileSync",
            "existsSync",
            "mkdirSync",
            "readFileSync"
          ],
          "line": 6
        },
        {
          "modulePath": "path",
          "type": "named",
          "items": [
            "dirname"
          ],
          "line": 7
        },
        {
          "modulePath": "../../domain/entities/Magnet.js",
          "type": "named",
          "items": [
            "Magnet"
          ],
          "line": 8
        },
        {
          "modulePath": "../utils/EnhancedLogger.js",
          "type": "named",
          "items": [
            "EnhancedLogger"
          ],
          "line": 9
        },
        {
          "modulePath": "../../config/addonConfig.js",
          "type": "named",
          "items": [
            "addonConfig"
          ],
          "line": 10
        },
        {
          "modulePath": "../../config/constants.js",
          "type": "named",
          "items": [
            "CONSTANTS"
          ],
          "line": 11
        },
        {
          "modulePath": "../patterns/ConfigurationCommand.js",
          "type": "named",
          "items": [
            "ConfigurationCommandFactory"
          ],
          "line": 12
        },
        {
          "modulePath": "./TorService.js",
          "type": "named",
          "items": [
            "TorService"
          ],
          "line": 13
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 18
        },
        {
          "name": "toJSON",
          "type": "public",
          "line": 26
        },
        {
          "name": "constructor",
          "type": "public",
          "line": 65
        },
        {
          "name": "if",
          "type": "public",
          "line": 123
        },
        {
          "name": "switch",
          "type": "public",
          "line": 149
        },
        {
          "name": "if",
          "type": "public",
          "line": 165
        },
        {
          "name": "if",
          "type": "public",
          "line": 173
        },
        {
          "name": "if",
          "type": "public",
          "line": 233
        },
        {
          "name": "if",
          "type": "public",
          "line": 244
        },
        {
          "name": "if",
          "type": "public",
          "line": 254
        },
        {
          "name": "if",
          "type": "public",
          "line": 257
        },
        {
          "name": "if",
          "type": "public",
          "line": 280
        },
        {
          "name": "if",
          "type": "public",
          "line": 283
        },
        {
          "name": "if",
          "type": "public",
          "line": 303
        },
        {
          "name": "if",
          "type": "public",
          "line": 313
        },
        {
          "name": "if",
          "type": "public",
          "line": 353
        },
        {
          "name": "if",
          "type": "public",
          "line": 368
        },
        {
          "name": "if",
          "type": "public",
          "line": 382
        },
        {
          "name": "if",
          "type": "public",
          "line": 385
        },
        {
          "name": "for",
          "type": "public",
          "line": 491
        },
        {
          "name": "if",
          "type": "public",
          "line": 494
        },
        {
          "name": "if",
          "type": "public",
          "line": 512
        },
        {
          "name": "if",
          "type": "public",
          "line": 575
        },
        {
          "name": "if",
          "type": "public",
          "line": 581
        },
        {
          "name": "switch",
          "type": "public",
          "line": 588
        },
        {
          "name": "if",
          "type": "public",
          "line": 610
        },
        {
          "name": "if",
          "type": "public",
          "line": 620
        },
        {
          "name": "switch",
          "type": "public",
          "line": 627
        },
        {
          "name": "if",
          "type": "public",
          "line": 642
        },
        {
          "name": "for",
          "type": "public",
          "line": 784
        },
        {
          "name": "for",
          "type": "public",
          "line": 809
        },
        {
          "name": "if",
          "type": "public",
          "line": 812
        },
        {
          "name": "if",
          "type": "public",
          "line": 833
        },
        {
          "name": "if",
          "type": "public",
          "line": 853
        },
        {
          "name": "if",
          "type": "public",
          "line": 875
        },
        {
          "name": "for",
          "type": "public",
          "line": 901
        },
        {
          "name": "for",
          "type": "public",
          "line": 938
        },
        {
          "name": "if",
          "type": "public",
          "line": 939
        },
        {
          "name": "if",
          "type": "public",
          "line": 966
        },
        {
          "name": "for",
          "type": "public",
          "line": 979
        },
        {
          "name": "if",
          "type": "public",
          "line": 982
        },
        {
          "name": "if",
          "type": "public",
          "line": 993
        },
        {
          "name": "if",
          "type": "public",
          "line": 1008
        },
        {
          "name": "if",
          "type": "public",
          "line": 1052
        },
        {
          "name": "if",
          "type": "public",
          "line": 1066
        },
        {
          "name": "for",
          "type": "public",
          "line": 1071
        },
        {
          "name": "setPriorityLanguage",
          "type": "public",
          "line": 1587
        },
        {
          "name": "getProviderConfig",
          "type": "public",
          "line": 1609
        },
        {
          "name": "setProviderConfig",
          "type": "public",
          "line": 1619
        },
        {
          "name": "if",
          "type": "public",
          "line": 1620
        },
        {
          "name": "getPriorityLanguage",
          "type": "public",
          "line": 1636
        },
        {
          "name": "if",
          "type": "public",
          "line": 1685
        },
        {
          "name": "if",
          "type": "public",
          "line": 1771
        },
        {
          "name": "#filterResultsWithSeeds",
          "type": "private",
          "line": 409
        },
        {
          "name": "#deduplicateAndCombineResults",
          "type": "private",
          "line": 424
        },
        {
          "name": "#parseStreamsToMagnets",
          "type": "private",
          "line": 489
        },
        {
          "name": "#convertSizeToGB",
          "type": "private",
          "line": 574
        },
        {
          "name": "#selectBestMagnet",
          "type": "private",
          "line": 609
        },
        {
          "name": "#sortBySeeders",
          "type": "private",
          "line": 656
        },
        {
          "name": "#sortByQuality",
          "type": "private",
          "line": 667
        },
        {
          "name": "#sortByBalanced",
          "type": "private",
          "line": 691
        },
        {
          "name": "#buildFullStreamName",
          "type": "private",
          "line": 720
        },
        {
          "name": "#extractQualityFromStream",
          "type": "private",
          "line": 764
        },
        {
          "name": "#extractSizeFromStream",
          "type": "private",
          "line": 801
        },
        {
          "name": "#extractSeedersAndPeers",
          "type": "private",
          "line": 826
        },
        {
          "name": "#extractFilename",
          "type": "private",
          "line": 851
        },
        {
          "name": "#extractProvider",
          "type": "private",
          "line": 870
        },
        {
          "name": "#buildMagnetUri",
          "type": "private",
          "line": 918
        },
        {
          "name": "#extractEpisodeInfo",
          "type": "private",
          "line": 965
        },
        {
          "name": "#cleanMagnetName",
          "type": "private",
          "line": 1007
        },
        {
          "name": "#magnetToCsvLine",
          "type": "private",
          "line": 1114
        },
        {
          "name": "#detectContentType",
          "type": "private",
          "line": 1160
        },
        {
          "name": "#intelligentContentIdProcessing",
          "type": "private",
          "line": 1264
        },
        {
          "name": "#detectContentIdType",
          "type": "private",
          "line": 1318
        },
        {
          "name": "#processImdbId",
          "type": "private",
          "line": 1341
        },
        {
          "name": "#processKitsuId",
          "type": "private",
          "line": 1359
        },
        {
          "name": "#processTmdbId",
          "type": "private",
          "line": 1376
        },
        {
          "name": "#processTvdbId",
          "type": "private",
          "line": 1391
        },
        {
          "name": "#processAnilistId",
          "type": "private",
          "line": 1406
        },
        {
          "name": "#processMalId",
          "type": "private",
          "line": 1422
        },
        {
          "name": "#processAnidbId",
          "type": "private",
          "line": 1438
        },
        {
          "name": "#processContentId",
          "type": "private",
          "line": 1449
        },
        {
          "name": "#isKitsuDerivedContent",
          "type": "private",
          "line": 1468
        },
        {
          "name": "#isLikelyAnimeContent",
          "type": "private",
          "line": 1490
        },
        {
          "name": "#initializeProviderConfigs",
          "type": "private",
          "line": 1528
        },
        {
          "name": "#getOptimizedBaseUrl",
          "type": "private",
          "line": 1560
        },
        {
          "name": "#ensureTorrentioFileExists",
          "type": "private",
          "line": 1644
        },
        {
          "name": "#cleanExpiredCache",
          "type": "private",
          "line": 1708
        }
      ],
      "classes": [
        {
          "name": "TorrentioApiError",
          "line": 18
        },
        {
          "name": "TorrentioApiService",
          "line": 44
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\services\\TorService.js",
      "exports": [
        {
          "name": "TorService",
          "type": "named",
          "line": 15
        },
        {
          "name": "TorService",
          "type": "default",
          "line": 304
        }
      ],
      "imports": [
        {
          "modulePath": "net",
          "type": "default",
          "items": [
            "net"
          ],
          "line": 6
        },
        {
          "modulePath": "socks-proxy-agent",
          "type": "named",
          "items": [
            "SocksProxyAgent"
          ],
          "line": 7
        },
        {
          "modulePath": "../../config/constants.js",
          "type": "named",
          "items": [
            "CONSTANTS"
          ],
          "line": 8
        },
        {
          "modulePath": "../utils/EnhancedLogger.js",
          "type": "named",
          "items": [
            "EnhancedLogger"
          ],
          "line": 9
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 39
        },
        {
          "name": "if",
          "type": "public",
          "line": 54
        },
        {
          "name": "if",
          "type": "public",
          "line": 65
        },
        {
          "name": "if",
          "type": "public",
          "line": 75
        },
        {
          "name": "if",
          "type": "public",
          "line": 111
        },
        {
          "name": "if",
          "type": "public",
          "line": 118
        },
        {
          "name": "if",
          "type": "public",
          "line": 139
        },
        {
          "name": "if",
          "type": "public",
          "line": 157
        },
        {
          "name": "if",
          "type": "public",
          "line": 160
        },
        {
          "name": "if",
          "type": "public",
          "line": 182
        },
        {
          "name": "if",
          "type": "public",
          "line": 222
        },
        {
          "name": "stopAutoRotation",
          "type": "public",
          "line": 243
        },
        {
          "name": "if",
          "type": "public",
          "line": 244
        },
        {
          "name": "getAgent",
          "type": "public",
          "line": 255
        },
        {
          "name": "isEnabled",
          "type": "public",
          "line": 263
        },
        {
          "name": "getConfig",
          "type": "public",
          "line": 271
        },
        {
          "name": "destroy",
          "type": "public",
          "line": 296
        },
        {
          "name": "#initializeAgent",
          "type": "private",
          "line": 64
        },
        {
          "name": "#startAutoRotation",
          "type": "private",
          "line": 221
        }
      ],
      "classes": [
        {
          "name": "TorService",
          "line": 15
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\services\\UnifiedIdService.js",
      "exports": [
        {
          "name": "UnifiedIdService",
          "type": "named",
          "line": 13
        },
        {
          "name": "unifiedIdService",
          "original": "unifiedIdService",
          "type": "named",
          "line": 271
        }
      ],
      "imports": [
        {
          "modulePath": "../utils/EnhancedLogger.js",
          "type": "named",
          "items": [
            "EnhancedLogger"
          ],
          "line": 7
        },
        {
          "modulePath": "./IdDetectorService.js",
          "type": "named",
          "items": [
            "idDetectorService"
          ],
          "line": 8
        },
        {
          "modulePath": "./CacheService.js",
          "type": "named",
          "items": [
            "cacheService"
          ],
          "line": 9
        },
        {
          "modulePath": "../../config/addonConfig.js",
          "type": "named",
          "items": [
            "addonConfig"
          ],
          "line": 10
        },
        {
          "modulePath": "../../config/constants.js",
          "type": "named",
          "items": [
            "CONSTANTS"
          ],
          "line": 11
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 13
        },
        {
          "name": "if",
          "type": "public",
          "line": 49
        },
        {
          "name": "if",
          "type": "public",
          "line": 55
        },
        {
          "name": "if",
          "type": "public",
          "line": 69
        },
        {
          "name": "if",
          "type": "public",
          "line": 98
        },
        {
          "name": "if",
          "type": "public",
          "line": 135
        },
        {
          "name": "if",
          "type": "public",
          "line": 142
        },
        {
          "name": "if",
          "type": "public",
          "line": 174
        },
        {
          "name": "if",
          "type": "public",
          "line": 219
        },
        {
          "name": "if",
          "type": "public",
          "line": 222
        },
        {
          "name": "#createProcessingResult",
          "type": "private",
          "line": 203
        },
        {
          "name": "#validateConversionInput",
          "type": "private",
          "line": 218
        }
      ],
      "classes": [
        {
          "name": "UnifiedIdService",
          "line": 13
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\utils\\CsvFileInitializer.js",
      "exports": [
        {
          "name": "CsvFileInitializer",
          "type": "named",
          "line": 10
        }
      ],
      "imports": [
        {
          "modulePath": "../utils/EnhancedLogger.js",
          "type": "named",
          "items": [
            "EnhancedLogger"
          ],
          "line": 6
        },
        {
          "modulePath": "fs",
          "type": "named",
          "items": [
            "existsSync",
            "writeFileSync",
            "mkdirSync"
          ],
          "line": 7
        },
        {
          "modulePath": "path",
          "type": "named",
          "items": [
            "dirname"
          ],
          "line": 8
        }
      ],
      "methods": [],
      "classes": [
        {
          "name": "CsvFileInitializer",
          "line": 10
        }
      ],
      "functions": []
    },
    {
      "path": "src\\infrastructure\\utils\\EnhancedLogger.js",
      "exports": [
        {
          "name": "EnhancedLogger",
          "type": "named",
          "line": 10
        },
        {
          "name": "EnhancedLogger",
          "type": "default",
          "line": 487
        }
      ],
      "imports": [],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 23
        },
        {
          "name": "if",
          "type": "public",
          "line": 44
        },
        {
          "name": "info",
          "type": "public",
          "line": 168
        },
        {
          "name": "warn",
          "type": "public",
          "line": 177
        },
        {
          "name": "error",
          "type": "public",
          "line": 186
        },
        {
          "name": "debug",
          "type": "public",
          "line": 195
        },
        {
          "name": "setLogLevel",
          "type": "public",
          "line": 203
        },
        {
          "name": "getLogLevel",
          "type": "public",
          "line": 211
        },
        {
          "name": "setSourceTracking",
          "type": "public",
          "line": 219
        },
        {
          "name": "createChild",
          "type": "public",
          "line": 228
        },
        {
          "name": "structured",
          "type": "public",
          "line": 274
        },
        {
          "name": "if",
          "type": "public",
          "line": 283
        },
        {
          "name": "withTransaction",
          "type": "public",
          "line": 304
        },
        {
          "name": "log",
          "type": "public",
          "line": 327
        },
        {
          "name": "logWithComponent",
          "type": "public",
          "line": 367
        },
        {
          "name": "operationComplete",
          "type": "public",
          "line": 377
        },
        {
          "name": "validationFailed",
          "type": "public",
          "line": 387
        },
        {
          "name": "resourceNotFound",
          "type": "public",
          "line": 397
        },
        {
          "name": "configurationApplied",
          "type": "public",
          "line": 406
        },
        {
          "name": "searchResults",
          "type": "public",
          "line": 418
        },
        {
          "name": "resourceDiscarded",
          "type": "public",
          "line": 428
        },
        {
          "name": "processingError",
          "type": "public",
          "line": 438
        },
        {
          "name": "selectionMade",
          "type": "public",
          "line": 448
        },
        {
          "name": "nonOptimalCondition",
          "type": "public",
          "line": 458
        },
        {
          "name": "resourceChanged",
          "type": "public",
          "line": 468
        },
        {
          "name": "configurationStatus",
          "type": "public",
          "line": 478
        },
        {
          "name": "#getSourceLocation",
          "type": "private",
          "line": 43
        },
        {
          "name": "#formatMessage",
          "type": "private",
          "line": 101
        },
        {
          "name": "#shouldLog",
          "type": "private",
          "line": 141
        },
        {
          "name": "#logGeneric",
          "type": "private",
          "line": 149
        }
      ],
      "classes": [
        {
          "name": "EnhancedLogger",
          "line": 10
        }
      ],
      "functions": []
    },
    {
      "path": "index.js",
      "exports": [],
      "imports": [
        {
          "modulePath": "./src/index.js",
          "type": "named",
          "items": [
            "MagnetAddon"
          ],
          "line": 3
        }
      ],
      "methods": [],
      "classes": [],
      "functions": [
        {
          "name": "main",
          "line": 13
        }
      ]
    },
    {
      "path": "fix-logger-calls.js",
      "exports": [
        {
          "name": "LoggerFixer",
          "original": "LoggerFixer",
          "type": "named",
          "line": 436
        },
        {
          "name": "LoggerAnalyzer",
          "original": "LoggerAnalyzer",
          "type": "named",
          "line": 436
        },
        {
          "name": "LoggerFixerUtils",
          "original": "LoggerFixerUtils",
          "type": "named",
          "line": 436
        }
      ],
      "imports": [
        {
          "modulePath": "fs",
          "type": "default",
          "items": [
            "fs"
          ],
          "line": 7
        },
        {
          "modulePath": "path",
          "type": "default",
          "items": [
            "path"
          ],
          "line": 8
        },
        {
          "modulePath": "url",
          "type": "named",
          "items": [
            "fileURLToPath"
          ],
          "line": 9
        }
      ],
      "methods": [
        {
          "name": "for",
          "type": "public",
          "line": 199
        },
        {
          "name": "if",
          "type": "public",
          "line": 254
        },
        {
          "name": "if",
          "type": "public",
          "line": 300
        },
        {
          "name": "if",
          "type": "public",
          "line": 315
        },
        {
          "name": "if",
          "type": "public",
          "line": 318
        },
        {
          "name": "if",
          "type": "public",
          "line": 340
        },
        {
          "name": "if",
          "type": "public",
          "line": 357
        },
        {
          "name": "if",
          "type": "public",
          "line": 370
        },
        {
          "name": "if",
          "type": "public",
          "line": 384
        },
        {
          "name": "if",
          "type": "public",
          "line": 398
        },
        {
          "name": "if",
          "type": "public",
          "line": 412
        }
      ],
      "classes": [
        {
          "name": "LoggerFixerUtils",
          "line": 169
        },
        {
          "name": "LoggerAnalyzer",
          "line": 221
        },
        {
          "name": "LoggerFixer",
          "line": 294
        }
      ],
      "functions": [
        {
          "name": "traverse",
          "line": 198
        },
        {
          "name": "main",
          "line": 339
        }
      ]
    },
    {
      "path": "analyze-references.js",
      "exports": [
        {
          "name": "ReferenceAnalyzer",
          "original": "ReferenceAnalyzer",
          "type": "named",
          "line": 536
        }
      ],
      "imports": [
        {
          "modulePath": "fs",
          "type": "default",
          "items": [
            "fs"
          ],
          "line": 7
        },
        {
          "modulePath": "path",
          "type": "default",
          "items": [
            "path"
          ],
          "line": 8
        },
        {
          "modulePath": "url",
          "type": "named",
          "items": [
            "fileURLToPath"
          ],
          "line": 9
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 15
        },
        {
          "name": "for",
          "type": "public",
          "line": 61
        },
        {
          "name": "for",
          "type": "public",
          "line": 67
        },
        {
          "name": "scanDirectory",
          "type": "public",
          "line": 89
        },
        {
          "name": "for",
          "type": "public",
          "line": 93
        },
        {
          "name": "for",
          "type": "public",
          "line": 114
        },
        {
          "name": "parseImports",
          "type": "public",
          "line": 135
        },
        {
          "name": "if",
          "type": "public",
          "line": 148
        },
        {
          "name": "parseExports",
          "type": "public",
          "line": 164
        },
        {
          "name": "parseMethods",
          "type": "public",
          "line": 207
        },
        {
          "name": "parseClasses",
          "type": "public",
          "line": 238
        },
        {
          "name": "parseFunctions",
          "type": "public",
          "line": 255
        },
        {
          "name": "for",
          "type": "public",
          "line": 274
        },
        {
          "name": "for",
          "type": "public",
          "line": 285
        },
        {
          "name": "if",
          "type": "public",
          "line": 287
        },
        {
          "name": "if",
          "type": "public",
          "line": 295
        },
        {
          "name": "if",
          "type": "public",
          "line": 302
        },
        {
          "name": "for",
          "type": "public",
          "line": 303
        },
        {
          "name": "if",
          "type": "public",
          "line": 308
        },
        {
          "name": "if",
          "type": "public",
          "line": 329
        },
        {
          "name": "for",
          "type": "public",
          "line": 348
        },
        {
          "name": "for",
          "type": "public",
          "line": 350
        },
        {
          "name": "for",
          "type": "public",
          "line": 378
        },
        {
          "name": "resolveImportPath",
          "type": "public",
          "line": 396
        },
        {
          "name": "getLineNumber",
          "type": "public",
          "line": 417
        },
        {
          "name": "isInsideComment",
          "type": "public",
          "line": 424
        },
        {
          "name": "addError",
          "type": "public",
          "line": 446
        },
        {
          "name": "addWarning",
          "type": "public",
          "line": 454
        },
        {
          "name": "generateReport",
          "type": "public",
          "line": 462
        },
        {
          "name": "if",
          "type": "public",
          "line": 471
        },
        {
          "name": "if",
          "type": "public",
          "line": 478
        },
        {
          "name": "if",
          "type": "public",
          "line": 485
        },
        {
          "name": "if",
          "type": "public",
          "line": 496
        },
        {
          "name": "generateReportFile",
          "type": "public",
          "line": 507
        }
      ],
      "classes": [
        {
          "name": "ReferenceAnalyzer",
          "line": 14
        }
      ],
      "functions": []
    },
    {
      "path": "fix-references.js",
      "exports": [
        {
          "name": "${itemName",
          "original": "${itemName",
          "type": "named",
          "line": 248
        },
        {
          "name": "'));\n      \n      if (hasExportLine) {\n        // Buscar la línea de export existente y añadir el item\n        const exportLineIndex = lines.findIndex(line => line.includes('export {'));\n        const currentExportLine = lines[exportLineIndex];\n        \n        if (currentExportLine.includes('",
          "original": "'));\n      \n      if (hasExportLine) {\n        // Buscar la línea de export existente y añadir el item\n        const exportLineIndex = lines.findIndex(line => line.includes('export {'));\n        const currentExportLine = lines[exportLineIndex];\n        \n        if (currentExportLine.includes('",
          "type": "named",
          "line": 251
        },
        {
          "name": "ReferenceFixer",
          "original": "ReferenceFixer",
          "type": "named",
          "line": 510
        }
      ],
      "imports": [
        {
          "modulePath": "fs",
          "type": "default",
          "items": [
            "fs"
          ],
          "line": 7
        },
        {
          "modulePath": "path",
          "type": "default",
          "items": [
            "path"
          ],
          "line": 8
        },
        {
          "modulePath": "url",
          "type": "named",
          "items": [
            "fileURLToPath"
          ],
          "line": 9
        },
        {
          "modulePath": "./analyze-references.js",
          "type": "named",
          "items": [
            "ReferenceAnalyzer"
          ],
          "line": 10
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 16
        },
        {
          "name": "for",
          "type": "public",
          "line": 60
        },
        {
          "name": "for",
          "type": "public",
          "line": 98
        },
        {
          "name": "if",
          "type": "public",
          "line": 127
        },
        {
          "name": "if",
          "type": "public",
          "line": 131
        },
        {
          "name": "if",
          "type": "public",
          "line": 165
        },
        {
          "name": "for",
          "type": "public",
          "line": 176
        },
        {
          "name": "if",
          "type": "public",
          "line": 202
        },
        {
          "name": "for",
          "type": "public",
          "line": 218
        },
        {
          "name": "for",
          "type": "public",
          "line": 227
        },
        {
          "name": "if",
          "type": "public",
          "line": 245
        },
        {
          "name": "if",
          "type": "public",
          "line": 252
        },
        {
          "name": "for",
          "type": "public",
          "line": 275
        },
        {
          "name": "if",
          "type": "public",
          "line": 278
        },
        {
          "name": "findUnusedImports",
          "type": "public",
          "line": 288
        },
        {
          "name": "for",
          "type": "public",
          "line": 290
        },
        {
          "name": "for",
          "type": "public",
          "line": 292
        },
        {
          "name": "if",
          "type": "public",
          "line": 300
        },
        {
          "name": "for",
          "type": "public",
          "line": 315
        },
        {
          "name": "if",
          "type": "public",
          "line": 326
        },
        {
          "name": "for",
          "type": "public",
          "line": 340
        },
        {
          "name": "for",
          "type": "public",
          "line": 357
        },
        {
          "name": "for",
          "type": "public",
          "line": 358
        },
        {
          "name": "shouldBeExported",
          "type": "public",
          "line": 372
        },
        {
          "name": "findDefinitionLine",
          "type": "public",
          "line": 387
        },
        {
          "name": "for",
          "type": "public",
          "line": 388
        },
        {
          "name": "getFilePathFromError",
          "type": "public",
          "line": 403
        },
        {
          "name": "for",
          "type": "public",
          "line": 404
        },
        {
          "name": "if",
          "type": "public",
          "line": 405
        },
        {
          "name": "addFix",
          "type": "public",
          "line": 415
        },
        {
          "name": "for",
          "type": "public",
          "line": 437
        },
        {
          "name": "generateFixReport",
          "type": "public",
          "line": 458
        },
        {
          "name": "if",
          "type": "public",
          "line": 461
        },
        {
          "name": "for",
          "type": "public",
          "line": 471
        },
        {
          "name": "for",
          "type": "public",
          "line": 477
        }
      ],
      "classes": [
        {
          "name": "ReferenceFixer",
          "line": 15
        },
        {
          "name": "$",
          "line": 390
        }
      ],
      "functions": []
    },
    {
      "path": "reference-checker.js",
      "exports": [
        {
          "name": "ReferenceChecker",
          "original": "ReferenceChecker",
          "type": "named",
          "line": 341
        }
      ],
      "imports": [
        {
          "modulePath": "./analyze-references.js",
          "type": "named",
          "items": [
            "ReferenceAnalyzer"
          ],
          "line": 7
        },
        {
          "modulePath": "./fix-references.js",
          "type": "named",
          "items": [
            "ReferenceFixer"
          ],
          "line": 8
        },
        {
          "modulePath": "url",
          "type": "named",
          "items": [
            "fileURLToPath"
          ],
          "line": 9
        },
        {
          "modulePath": "path",
          "type": "default",
          "items": [
            "path"
          ],
          "line": 10
        }
      ],
      "methods": [
        {
          "name": "constructor",
          "type": "public",
          "line": 16
        },
        {
          "name": "showHelp",
          "type": "public",
          "line": 25
        },
        {
          "name": "if",
          "type": "public",
          "line": 53
        },
        {
          "name": "if",
          "type": "public",
          "line": 77
        },
        {
          "name": "for",
          "type": "public",
          "line": 105
        },
        {
          "name": "for",
          "type": "public",
          "line": 128
        },
        {
          "name": "if",
          "type": "public",
          "line": 131
        },
        {
          "name": "if",
          "type": "public",
          "line": 141
        },
        {
          "name": "if",
          "type": "public",
          "line": 149
        },
        {
          "name": "for",
          "type": "public",
          "line": 159
        },
        {
          "name": "for",
          "type": "public",
          "line": 173
        },
        {
          "name": "findPotentialUnusedImports",
          "type": "public",
          "line": 189
        },
        {
          "name": "for",
          "type": "public",
          "line": 191
        },
        {
          "name": "for",
          "type": "public",
          "line": 193
        },
        {
          "name": "if",
          "type": "public",
          "line": 198
        },
        {
          "name": "findPotentialMissingExports",
          "type": "public",
          "line": 211
        },
        {
          "name": "showDetailedAnalysis",
          "type": "public",
          "line": 234
        },
        {
          "name": "for",
          "type": "public",
          "line": 240
        },
        {
          "name": "parseArgs",
          "type": "public",
          "line": 273
        },
        {
          "name": "if",
          "type": "public",
          "line": 289
        },
        {
          "name": "switch",
          "type": "public",
          "line": 296
        },
        {
          "name": "if",
          "type": "public",
          "line": 314
        },
        {
          "name": "if",
          "type": "public",
          "line": 317
        },
        {
          "name": "if",
          "type": "public",
          "line": 319
        },
        {
          "name": "if",
          "type": "public",
          "line": 323
        }
      ],
      "classes": [
        {
          "name": "ReferenceChecker",
          "line": 15
        }
      ],
      "functions": []
    }
  ]
}